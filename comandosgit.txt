Estados de git
working Directory (modified)  el directorio de trabajo

git add

stagin area (staged)     cuando estan preparados los archivos

git commit

local repository (commited)  los cambios estan confirmados


configura variables de uso 
git config --global user.name jtuxman
git config --global user.email jmanuel.hurt@gmail.com
muestr configuracion
git config  --list

inicializa un repositorio
git init 

agrega un archivo al proyecto
meter archivos al estado STAGE
git add comandosgit.txt

muestra el estado de los archivos del proyecto
git status

agregar los archivos al estado
git commit -m " agregando el archivo de resumen de comandos"

muestra el estado de los commits
git log

no viene en el curso pero creo que crea la rama principal
git branch -M main

configura el reposito un repositorio remoti
git remote add origin https://github.com/jtuxman/gitcourse.git 

muestra cual es el repositorio remoto
git remote -v


enviar el repositorio local al repositorio 
git push origin main

para descargar un repositorio modificado
git pull origin main

borrar archivos no trackeados del a working directgory
git clean -f



restaurar un archivo del staging area (git add) al working Directory
git restore --staged archivo.txt

tambien se puede usar
git restore archivo.txt

restaurar hasta cierto commit eliminando los commits anteriores
git revert HASH
git revert 8f05ccc8404601e98e53a7737e21b411a5073345

el HASH se puede sacar con git log
despu√©s de eso agregar los cambios de los archivos modificados y salvados
con git add archivos
git commit -m "restaurando cambios"
esto permite tener un registro de los cambios que se restauraron
y hasta que punto se restauraron.


para renombrar un archivo que ya esta en el repositorio o stage area
git mv archiv10.txt archivo11.txt
git commit -m "renombrando archivo con mv"

es un atajo de hacer un
git add nuevonombre
git remove nuevonombre
git commit -m "renombrando manualmente"
